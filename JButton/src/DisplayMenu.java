
import java.awt.FileDialog;
import java.io.DataOutputStream;
import java.io.FileOutputStream;
import java.io.BufferedReader;
import java.io.StringReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.JOptionPane;

public class DisplayMenu extends javax.swing.JFrame {

    String filename = "";
    boolean textChanged = false;
    String fn;
    String dir;
    String holdText;
    String fileName;
    
    public DisplayMenu() {
        initComponents();
        jTextArea1.setEditable(false);
    }
    
        private void save(String fn){
        setTitle(filename);
        try
        {
            FileWriter out;
            out = new FileWriter(fn); 
            out.write(jTextArea1.getText());
            out.close();
        }
        catch(IOException err) 
        {
            System.out.println("Error: " + err);
        }
        textChanged=false;
        saveMenu.setEnabled(false);

    }
        
    private void saveAs() {
        FileDialog fd = new FileDialog(DisplayMenu.this, "Save", FileDialog.SAVE);
        fd.show();
        if (fd.getFile() != null) {

            fn=fd.getFile();
            dir=fd.getDirectory();
            filename = dir + fn +".txt";

            setTitle(filename);
            try
            {
                DataOutputStream d = new DataOutputStream(new FileOutputStream(filename));
                holdText = jTextArea1.getText();
                StringBuilder sb1 = new StringBuilder();
                BufferedReader br = new BufferedReader(new StringReader(holdText)); 
                while ((holdText = br.readLine()) != null)
                {
                    sb1.append(holdText);
                    sb1.append("\n");
                }
                saveMenu.setEnabled(false);
            }
            catch (IOException e)
            {
                System.out.println("File not found");
            }
            jTextArea1.requestFocus();
            save(filename);
        }
    }

    public void checkFile() {
        BufferedReader read; 
        StringBuilder sb = new StringBuilder();
        try {
            read = new BufferedReader(new FileReader(fileName)); 
            String line;
            while ((line = read.readLine()) != null) {
                sb.append(line);
                sb.append("\n");
            }
            jTextArea1.setText(sb.toString());
            read.close();
        } catch (FileNotFoundException e) {
            System.out.println("File not found");
        } catch (IOException ioe) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        newMenu = new javax.swing.JMenuItem();
        openMenu = new javax.swing.JMenuItem();
        saveMenu = new javax.swing.JMenuItem();
        closeMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Notepad");
        setResizable(false);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jMenu1.setText("File");

        newMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newMenu.setText("New");
        newMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newMenuMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                newMenuMousePressed(evt);
            }
        });
        newMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMenuActionPerformed(evt);
            }
        });
        jMenu1.add(newMenu);

        openMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenu.setText("Open");
        openMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                openMenuMousePressed(evt);
            }
        });
        openMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuActionPerformed(evt);
            }
        });
        jMenu1.add(openMenu);

        saveMenu.setText("Save");
        saveMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                saveMenuMousePressed(evt);
            }
        });
        saveMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuActionPerformed(evt);
            }
        });
        jMenu1.add(saveMenu);

        closeMenu.setText("Close");
        closeMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                closeMenuMousePressed(evt);
            }
        });
        closeMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeMenuActionPerformed(evt);
            }
        });
        jMenu1.add(closeMenu);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newMenuMouseClicked

    }//GEN-LAST:event_newMenuMouseClicked

    private void newMenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newMenuMousePressed

    }//GEN-LAST:event_newMenuMousePressed

    private void closeMenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMenuMousePressed

    }//GEN-LAST:event_closeMenuMousePressed

    private void openMenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openMenuMousePressed
   
    }//GEN-LAST:event_openMenuMousePressed

    private void saveMenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMenuMousePressed
        
    }//GEN-LAST:event_saveMenuMousePressed

    private void openMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuActionPerformed
        // TODO add your handling code here:
        
        if((jTextArea1.getText().length() < 1) || !textChanged) {
        FileDialog fd = new FileDialog(this, "Choose File", FileDialog.LOAD);
        fd.show();
        if (fd.getFile() != null) {
            fileName = fd.getDirectory() + fd.getFile();
            setTitle(fileName);
            checkFile();
        }
        jTextArea1.requestFocus();
     }
    /*    else if (!textChanged){
            FileDialog fd = new FileDialog(this, "Choose File", FileDialog.LOAD);
        fd.show();
        if (fd.getFile() != null) {
            fileName = fd.getDirectory() + fd.getFile();
            setTitle(fileName);
            checkFile();
        }
        jTextArea1.requestFocus();
        }
    */ 
     else{
            int confirm = JOptionPane.showConfirmDialog(null, "Do you want to save befor exiting this program?", "Notepad",JOptionPane.YES_NO_CANCEL_OPTION);
            if (confirm==JOptionPane.YES_OPTION)
            {
                if("".equals(filename)){
                    saveAs();
                }
                else{
                    save(filename);
                }
            FileDialog fd = new FileDialog(this, "Choose File", FileDialog.LOAD);
            fd.show();
            if (fd.getFile() != null) {
                fileName = fd.getDirectory() + fd.getFile();
                setTitle(fileName);
                checkFile();
            }
            jTextArea1.requestFocus();

            }
            else if(confirm == JOptionPane.NO_OPTION){
                FileDialog fd = new FileDialog(this, "Choose File", FileDialog.LOAD);
                fd.show();
                if (fd.getFile() != null) {
                    fileName = fd.getDirectory() + fd.getFile();
                    setTitle(fileName);
                    checkFile();
                }
                jTextArea1.requestFocus();
            }

        }
        jTextArea1.setEditable(true);
        
        
    }//GEN-LAST:event_openMenuActionPerformed

    private void saveMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuActionPerformed
        
       saveAs();
        
    }//GEN-LAST:event_saveMenuActionPerformed

    private void newMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuActionPerformed
        
        jTextArea1.setEditable(true); 
        
    }//GEN-LAST:event_newMenuActionPerformed

    private void closeMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeMenuActionPerformed
        // TODO add your handling code here:
        System.exit(0); 
//        this.dispose();
    }//GEN-LAST:event_closeMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplayMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplayMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplayMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplayMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisplayMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem closeMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JMenuItem newMenu;
    private javax.swing.JMenuItem openMenu;
    private javax.swing.JMenuItem saveMenu;
    // End of variables declaration//GEN-END:variables
}
